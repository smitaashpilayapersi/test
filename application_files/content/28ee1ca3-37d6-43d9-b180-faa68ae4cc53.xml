<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>AB_SAILUI_configureComponentFooterSection</name>
        <uuid>28ee1ca3-37d6-43d9-b180-faa68ae4cc53</uuid>
        <description>returns UI to capture more information about component</description>
        <parentUuid>_a-0000dc7e-760f-8000-927a-010000010000_199998</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>#&quot;SYSTEM_SYSRULES_sectionLayoutColumns&quot;(
  columns: {
    #&quot;SYSTEM_SYSRULES_columnLayout&quot;(
      contents: {
        /*if(
          or(
            ri!formData_cdt.componentList[ri!componentIndex].responseType = cons!PFS_RESPONSE_TYPE_SECTION,
            ri!formData_cdt.componentList[ri!componentIndex].responseType = cons!PFS_RESPONSE_TYPE_GRID_EDITABLE
          ),
          /* a section or grid will always use single column *//*{},
          a!dropdownField(
            label: &quot;Column Index&quot;,
            instructions: &quot;column index determines if the component appears where the component appears&quot;,
            required: false,
            choiceLabels: cons!PFS_COL_INDEX_LIST,
            choiceValues: cons!PFS_COL_INDEX_LIST,
            value: if(
              fn!isnull(
                ri!formData_cdt.componentList[ri!componentIndex].columnIndex
              ),
              cons!PFS_COL_INDEX_LIST[1],
              ri!formData_cdt.componentList[ri!componentIndex].columnIndex
            ),
            saveInto: {
              ri!formData_cdt.componentList[ri!componentIndex].columnIndex
            }
          )
        ),*/
        if(
          or(
            ri!formData_cdt.componentList[ri!componentIndex].responseType = #&quot;_a-0000da69-8640-8000-6ee0-010000010000_1157&quot;,
            ri!formData_cdt.componentList[ri!componentIndex].responseType = #&quot;_a-0000da69-8640-8000-6ee0-010000010000_1158&quot;,
            ri!formData_cdt.componentList[ri!componentIndex].responseType = #&quot;_a-0000dac9-d9df-8000-927a-010000010000_71763&quot;
          ),
          {},
          {
            #&quot;SYSTEM_SYSRULES_checkboxField&quot;(
              required: false,
              instructions: &quot;check this box, to make the corresponding component readOnly&quot;,
              choiceLabels: {
                &quot;Is ReadOnly&quot;
              },
              choiceValues: {
                true
              },
              value: ri!formData_cdt.componentList[ri!componentIndex].isReadOnly,
              saveInto: {
                ri!formData_cdt.componentList[ri!componentIndex].isReadOnly
              }
            )
          }
        )
      }
    ),
    #&quot;SYSTEM_SYSRULES_columnLayout&quot;(
      contents: {
        if(
          or(
            ri!formData_cdt.componentList[ri!componentIndex].responseType = #&quot;_a-0000da69-8640-8000-6ee0-010000010000_1157&quot;,
            ri!formData_cdt.componentList[ri!componentIndex].responseType = #&quot;_a-0000da69-8640-8000-6ee0-010000010000_1158&quot;,
            ri!formData_cdt.componentList[ri!componentIndex].responseType = #&quot;_a-0000dac9-d9df-8000-927a-010000010000_71763&quot;
          ),
          {},
          {
            #&quot;SYSTEM_SYSRULES_checkboxField&quot;(
              instructions: &quot;check this box if the component must be answered to submit the form&quot;,
              choiceLabels: {
                &quot;Is Required&quot;
              },
              choiceValues: {
                true
              },
              required: false,
              value: ri!formData_cdt.componentList[ri!componentIndex].isRequired,
              saveInto: {
                ri!formData_cdt.componentList[ri!componentIndex].isRequired
              }
            )
          }
        )
        /* a!dropdownField(
          label: &quot;Sequence&quot;,
          instructions: &quot;Sequence Index is used to sort the components with in a section&quot;,
          required: false,
          choiceLabels: 1 + enumerate(
            count(
              ri!formData_cdt.componentList
            )
          ),
          choiceValues: 1 + enumerate(
            count(
              ri!formData_cdt.componentList
            )
          ),
          value: ri!formData_cdt.componentList[ri!componentIndex].seqIndex,
          saveInto: {
            ri!formData_cdt.componentList[ri!componentIndex].seqIndex
             ,a!save(
              ri!formData_cdt.componentList,
              rule!PFS_UTIL_sortComponentListBySeqIndex(
                componentList: ri!formData_cdt.componentList
              )
            )
          }
        ),
        a!checkboxField(
          required: false,
          instructions: &quot;check this box, if you want to retire or ignore this component in the form&quot;,
          choiceLabels: {
            &quot;Is InActive&quot;
          },
          choiceValues: {
            true
          },
          value: ri!formData_cdt.componentList[ri!componentIndex].isInActive,
          saveInto: {
            ri!formData_cdt.componentList[ri!componentIndex].isInActive
          }
        )*/
        
      }
    )
  }
)</definition>
        <namedTypedValue>
            <name>formData_cdt</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>componentIndex</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name/>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:string"/>
                    <a:nameRef>formData_cdt</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" xsi:type="xsd:int"/>
                    <a:nameRef>componentIndex</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
            </el>
        </value>
    </typedValue>
</contentHaul>
