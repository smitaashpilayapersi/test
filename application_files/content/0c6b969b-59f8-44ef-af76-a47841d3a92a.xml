<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>AB_ConfigureComponentDropdownValidation</name>
        <uuid>0c6b969b-59f8-44ef-af76-a47841d3a92a</uuid>
        <description>This rule is used to get validations for configure component dropdown</description>
        <parentUuid>_a-0000dc7c-e2e3-8000-927a-010000010000_199939</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>with(
  local!isComponentReadOnly: if(
    isnull(
      ri!currentcomponent.isReadOnly
    ),
    false(),
    ri!currentcomponent.isReadOnly
  ),
  local!isComponentRequired: if(
    isnull(
      ri!currentcomponent.isRequired
    ),
    false(),
    ri!currentcomponent.isRequired
  ),
  local!isComponentDisabled: if(
    isnull(
      ri!currentComponent.isDisabled
    ),
    false(),
    ri!currentcomponent.isDisabled
  ),
  local!componentDefaultValue: 
  if(or(ri!currentComponent.responseType=#&quot;_a-0000dab5-7e00-8000-927a-010000010000_64888&quot;,ri!currentComponent.responseType=#&quot;_a-0000da69-8640-8000-6ee0-010000010000_1144&quot;),
  fn!index(
    ri!currentComponent,
    &quot;valueList&quot;,
    {}
  ),
  fn!index(
    ri!currentComponent,
    &quot;defaultValue&quot;,
    {}
  )),
  local!isComponentWithDefaultNull: if(
    and(
      or(
        local!isComponentReadOnly,
        local!isComponentDisabled
        ),
      local!isComponentRequired,
      isnull(
        local!componentDefaultValue
      )
    ),
    true(),
    false()
  ),
  local!validations:{
    if(
      local!isComponentWithDefaultNull,
      if(ri!currentComponent.responseType=#&quot;_a-0000dac9-d9df-8000-927a-010000010000_68836&quot;,
      &quot;Component &quot;&amp;ri!currentComponent.name &amp; &quot; has no documents selected.&quot;,
      &quot;Component &quot;&amp;ri!currentComponent.name &amp; &quot; has its default value null.&quot;
      ),
      null()
    ),
    if(
      contains(
        #&quot;_a-0000da69-8640-8000-6ee0-010000010000_1148&quot;(),
        ri!currentComponent.responseType
      ),
      #&quot;b440b7a9-d018-4200-bba5-c45ca87d3b2a&quot;(
        ri!currentComponent
      ),
      null()
    ),
    if(
      isnull(
        ri!currentComponent.parentList
      ),
      null(),
      if(
        any(
          fn!isnull,
          ri!currentComponent.parentList.parentComponentId
        ),
        &quot;Component &quot;&amp;ri!currentComponent.name &amp; &quot; has null value for its parent component&quot;,
        null()
      )
    ),
    if(
      isnull(
        ri!currentComponent.parentList
      ),
      null(),
      if(
        length(
          where(apply(
          fn!isnull(_),
          index(
            ri!currentComponent.parentList.valueTxt,
            where(apply(isnull(_),ri!currentComponent.parentList.matchAnyValueFlag)),
            {}
            )
        )
        ))&gt;0,
        &quot;Component &quot;&amp;ri!currentComponent.name &amp; &quot; has no value defined for its parent component&quot;,
        null()
      )
    ),
    if(isnull(ri!currentComponent.name),
    &quot;Component name cannot be null&quot;,
    null()
    )
    
  },
  /*local!validations*/
  /*count(local!validations)*/
  /*length(local!validations)*/
  local!validations
)</definition>
        <namedTypedValue>
            <name>currentComponent</name>
            <type>
                <name>AB_FrmCmpntsDesign</name>
                <namespace>urn:com:psi:types:AB</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
